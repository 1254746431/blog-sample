From 9d37410b0768baa056894672dfafeda7761e29e6 Mon Sep 17 00:00:00 2001
From: jitwxs <jitwxs@foxmail.com>
Date: Fri, 27 Oct 2017 16:33:21 +0800
Subject: [PATCH 5/5] syscall/_exit: add _exit05 to test _exit(2)

Signed-off-by: jitwxs <jitwxs@foxmail.com>
---
 testcases/kernel/syscalls/_exit/_exit05.c | 62 +++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)
 create mode 100644 testcases/kernel/syscalls/_exit/_exit05.c

diff --git a/testcases/kernel/syscalls/_exit/_exit05.c b/testcases/kernel/syscalls/_exit/_exit05.c
new file mode 100644
index 0000000..4038512
--- /dev/null
+++ b/testcases/kernel/syscalls/_exit/_exit05.c
@@ -0,0 +1,62 @@
+/*
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of version 2 of the GNU General Public License as
+ * published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it would be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write the Free Software Foundation, Inc.
+ */
+/**********************************************************
+ *
+ *    TEST IDENTIFIER   : exit05
+ *
+ *    TEST TITLE        : Basic tests for _exit(2)
+ *
+ *    TEST CASE TOTAL   : 1
+ *
+ *    AUTHOR            : jitwxs
+ *						<jitwxs@foxmail.com>
+ *
+ *    DESCRIPTION
+ *      This is a Phase I test for the _exit(2) system call.
+ *      It is intended to provide a limited exposure of the system call.
+ *
+ **********************************************************/
+
+#include <stdlib.h>
+#include <sys/types.h>
+#include <sys/wait.h>
+#include <signal.h>
+#include "tst_test.h"
+#include <stdlib.h>
+
+#define TMPFILE "tmpFile"
+
+void check_call(void)
+{
+	SAFE_TOUCH(TMPFILE, 0777, NULL);
+}
+
+static void my_test(void)
+{
+	if (!SAFE_FORK()) {
+		atexit(check_call);
+		_exit(0);
+	} else {
+		SAFE_WAIT(NULL);
+		if (access(TMPFILE, F_OK) != 0)
+			tst_res(TPASS, "_exit() Success!");
+		else
+			tst_res(TFAIL|TERRNO, "_exit() Failed!");
+	}
+}
+
+static struct tst_test test = {
+	.needs_tmpdir = 1,
+	.test_all = my_test,
+	.forks_child = 1
+};
-- 
1.8.3.1

